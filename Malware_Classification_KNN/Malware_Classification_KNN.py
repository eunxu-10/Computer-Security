import glob
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.neighbors import KNeighborsClassifier

# get dataset; 0 is normality, 1 is malicious code
files0 = glob.glob("0/*.txt")
files1 = glob.glob("1/*.txt")
list_file = []
number0 = 0
number1 = 0

for file in files0:
    with open(file, 'r') as f:
        line = f.read().replace('\n',' ')
        number0 += 1
        list_file.append(line)

for file in files1:
    with open(file,'r') as f:
        line = f.read().replace('\n',' ')
        number1 +=1
        list_file.append(line)

tfidf_vectorizer = TfidfVectorizer()
X = tfidf_vectorizer.fit_transform(list_file)
Y = [0 for x in range(number0)]
Y.extend([1 for x in range(number1)])

X_train, X_test, Y_train, Y_test = train_test_split(X,Y,test_size=0.2, stratify=Y)
classifier = KNeighborsClassifier(n_neighbors=3)
classifier.fit(X_train, Y_train)
print("Accuracy: {}".format(classifier.score(X_test,Y_test))) #test for accuracy

#Determine whether the file is malicious or normality
"""test_predicted_0 = int(classifier.predict(X[0]))
print("Is this file malicious code? ")
if test_predicted_0 == 0:
    print("This is normality")
else:
    print("This is malware")
"""

#shows the accuracy according to the size of k in graph
"""k_list = range(1,101)
accuracies = []
for k in k_list:
    classifier = KNeighborsClassifier(n_neighbors=k)
    classifier.fit(X_train, Y_train)
    accuracies.append(classifier.score(X_test,Y_test))

plt.plot(k_list, accuracies)
plt.xlabel("k")
plt.ylabel("Accuracy")
plt.title("Malware Classification Accuracy")
plt.show()"""